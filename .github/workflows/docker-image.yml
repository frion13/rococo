name: Docker Image CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      PROFILE: docker
      COMPOSE_PROFILES: test
      PREFIX: tatianalomanovskaya
      ARCH: amd64
      ALLURE_DOCKER_API: ${{ secrets.ALLURE_DOCKER_API }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      BUILD_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
      EXECUTION_TYPE: github
      HEAD_COMMIT_MESSAGE: GitHub Docker run
      FRONT_VERSION: 0.0.1
      DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
      DOCKER_HUB_PASSWORD: ${{ secrets.DOCKER_HUB_PASSWORD }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Grant execute permission to gradlew
        run: chmod +x gradlew

      - name: Build backends
        id: build
        run: |
          ./gradlew jibDockerBuild -x :rococo-e2e-tests:test

      - name: Report test results
        uses: dorny/test-reporter@v2
        if: always() && steps.build.outcome != 'skipped'
        with:
          name: Unit & Contract tests
          path: '**/build/test-results/test/TEST-*.xml'
          reporter: java-junit
          badge-title: 'unit & contract tests'

      - name: Add comment to PR with link to unit tests results
        if: always() && steps.build.outcome != 'skipped'
        uses: actions/github-script@v7
        with:
          script: |
            const buildStatus = '${{ steps.build.outcome }}'
            const message = buildStatus === 'success'
              ? `âœ… UNIT & INTEGRATION TESTS PASSED`
              : `ðŸ”´ UNIT & INTEGRATION TESTS FAILED`
            

      - name: Pull Chrome 127
        run: docker pull selenoid/vnc_chrome:127.0

      - name: Get the last commit message
        run: echo "HEAD_COMMIT_MESSAGE=$(git show -s --format=%s)" >> $GITHUB_ENV

      - name: Create Docker volume
        run: docker volume create allure-results

      - name: Run infrastructure
        run: |
          docker compose up -d rococo-all-db zookeeper kafka
          echo "### Waiting for DB to be ready ###"
          timeout 120 bash -c 'until docker exec rococo-all-db mysqladmin ping -uroot -psecret --silent; do echo "Waiting for MySQL..."; sleep 5; done'
          echo "### Waiting for Kafka to be ready ###"
          timeout 120 bash -c 'until docker exec kafka kafka-topics --bootstrap-server kafka:9092 --list >/dev/null 2>&1; do echo "Waiting for Kafka..."; sleep 5; done'

      - name: Start services
        run: |
          docker compose up -d
          echo "### Waiting for services to be healthy ###"
          timeout 120 bash -c 'until [ "$(docker inspect -f {{.State.Health.Status}} userdata.rococo.dc)" == "healthy" ]; do echo "Waiting for Userdata..."; sleep 5; done'
          timeout 120 bash -c 'until [ "$(docker inspect -f {{.State.Health.Status}} auth.rococo.dc)" == "healthy" ]; do echo "Waiting for Auth..."; sleep 5; done'

      - name: Check service status
        run: docker ps -a

      - name: Run e2e tests
        id: e2e
        continue-on-error: true
        run: |
          echo "### Starting tests ###"
          docker wait rococo-e2e-tests
          exit_code=$(docker inspect -f '{{.State.ExitCode}}' rococo-e2e-tests)
          echo "E2E_EXIT_CODE=$exit_code" >> $GITHUB_OUTPUT
          echo "### Test logs ###"
          docker logs rococo-e2e-tests
          if [ "$exit_code" -eq "0" ]; then
            echo "Tests passed successfully!"
          else
            echo "Tests failed!"
          fi

      - name: Dump auth container logs on failure
        if: failure()
        run: docker compose logs auth.rococo.dc

      - name: Add comment to PR with link to allure
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const exitCode = '${{ steps.e2e.outputs.E2E_EXIT_CODE }}'
            const reportUrl = 'https://allure.niffler-stage.qa.guru/api/allure-docker-service/projects/anbrain-rococo/reports/latest/index.html'
            const historyUrl = 'https://allure.niffler-stage.qa.guru/allure-docker-service-ui/projects/anbrain-rococo'
            const message = exitCode === '0'
              ? `âœ… E2E TEST RUN PASSED\n[Report](${reportUrl})\n[History](${historyUrl})`
              : `ðŸ”´ E2E TEST RUN FAILED\n[Report](${reportUrl})\n[History](${historyUrl})`
            

      # - name: Fail job if e2e tests failed
      #   if: ${{ steps.e2e.outputs.E2E_EXIT_CODE != '0' }}
      #   run: exit 1
